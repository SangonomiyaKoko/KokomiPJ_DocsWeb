import{_ as e,c as t,a0 as l,o as i}from"./chunks/framework.B_Gi1r42.js";const u=JSON.parse('{"title":"工会缓存功能设计","description":"","frontmatter":{},"headers":[],"relativePath":"design/function/clan_cache.md","filePath":"design/function/clan_cache.md","lastUpdated":null}'),n={name:"design/function/clan_cache.md"};function o(r,a,c,s,p,d){return i(),t("div",null,a[0]||(a[0]=[l('<h1 id="工会缓存功能设计" tabindex="-1">工会缓存功能设计 <a class="header-anchor" href="#工会缓存功能设计" aria-label="Permalink to &quot;工会缓存功能设计&quot;">​</a></h1><h2 id="实现功能" tabindex="-1">实现功能 <a class="header-anchor" href="#实现功能" aria-label="Permalink to &quot;实现功能&quot;">​</a></h2><ol><li><p><strong>工会对战对战数据记录</strong></p><ul><li><p>功能: 记录工会工会战的对战记录</p></li><li><p>数据: 根据工会的对战时间来判断是否有更新数据</p></li></ul></li><li><p><strong>工会排行榜</strong></p><ul><li><p>功能: 根据工会的积分来制作排行榜</p></li><li><p>数据: 当前赛季的所有工会积分</p></li></ul></li></ol><h2 id="数据库设计思路" tabindex="-1">数据库设计思路 <a class="header-anchor" href="#数据库设计思路" aria-label="Permalink to &quot;数据库设计思路&quot;">​</a></h2><h2 id="具体功能实现原理" tabindex="-1">具体功能实现原理 <a class="header-anchor" href="#具体功能实现原理" aria-label="Permalink to &quot;具体功能实现原理&quot;">​</a></h2><h3 id="工会排行榜" tabindex="-1">工会排行榜 <a class="header-anchor" href="#工会排行榜" aria-label="Permalink to &quot;工会排行榜&quot;">​</a></h3><p>通过游戏工会排名相关接口获取当前服务器最新赛季的排行榜数据</p><p>每5分钟遍历所有服务器的所有段位的工会数据，将赛季排名数据和赛季代码post给接口</p><p>接口收到数据后，首先检查获取到最新的赛季代码是否和储存的赛季代码一致</p><p>如果最新的赛季代码和储存的赛季代码不一致，说明赛季更新，需要初始化工会赛季数据</p><p>收到赛季排名数据后，首先先检查工会id是否存在</p>',11)]))}const f=e(n,[["render",o]]);export{u as __pageData,f as default};
