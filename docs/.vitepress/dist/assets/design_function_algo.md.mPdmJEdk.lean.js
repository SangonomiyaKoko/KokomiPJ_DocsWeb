import{_ as i,c as a,a0 as h,o as n}from"./chunks/framework.B_Gi1r42.js";const g=JSON.parse('{"title":"排位相关算法","description":"","frontmatter":{},"headers":[],"relativePath":"design/function/algo.md","filePath":"design/function/algo.md","lastUpdated":null}'),t={name:"design/function/algo.md"};function p(k,s,l,e,d,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="排位相关算法" tabindex="-1">排位相关算法 <a class="header-anchor" href="#排位相关算法" aria-label="Permalink to &quot;排位相关算法&quot;">​</a></h1><p>用户评分 = 场次系数 X (原始评分[待修改] + (裸经验系数 X 裸经验 / 胜率系数) - 服务器修正 - 组队修正)</p><h2 id="场次系数" tabindex="-1">场次系数 <a class="header-anchor" href="#场次系数" aria-label="Permalink to &quot;场次系数&quot;">​</a></h2><p>基于船只场次来确定计算中的系数，同时为了确保排除极端值最低从 10 场的数据开始统计</p><p>场次系数的值在[0.1, 1]之间，关于中间部分基于函数生成，确保在低场次情况下不会对榜上数据产生较大影响</p><p>例如：a^c - b 这种函数形式</p><h2 id="原始评分" tabindex="-1">原始评分 <a class="header-anchor" href="#原始评分" aria-label="Permalink to &quot;原始评分&quot;">​</a></h2><p>评分的计算是基于服务器平均数据和用户实际数据。这里采用的算法是基于 numbers 的玩家算法</p><p>目前是整个评分算法中的主要占比，通过服务器数据来判断用户所在的分段</p><p>但是这个评分数据存在一定的问题，例如并不能正确展示用户在所有用户中的占比[后续算法需要修改的地方]</p><p>步骤 1 -比率：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rDmg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> actualDmg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expectedDmg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rWins </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> actualWins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expectedWins</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rFrags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> actualFrags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expectedFrags</span></span></code></pre></div><p>步骤 2 -标准化：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nDmg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (rDmg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nFrags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (rFrags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nWins </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (rWins </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>步骤 3 - PR 值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 700</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nDMG </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nFrags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 150</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nWins</span></span></code></pre></div><p>此处获取到的原始评分值</p><h2 id="游戏贡献评分" tabindex="-1">游戏贡献评分 <a class="header-anchor" href="#游戏贡献评分" aria-label="Permalink to &quot;游戏贡献评分&quot;">​</a></h2><h3 id="胜率系数" tabindex="-1">胜率系数 <a class="header-anchor" href="#胜率系数" aria-label="Permalink to &quot;胜率系数&quot;">​</a></h3><p>胜率系数是用于清洗裸经验中胜率对原始经验数据的影响</p><p>假设失败的胜率系数是 1，胜利的胜率系数为 1.5，那么我们就能通过用户的胜率来计算胜率系数</p><p>用户的胜率基于[0 - 100]这个区间内，那么胜率系数也同样位于[1 - 1.5]的区间</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cWins </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(win_count X </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loss_count X </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> battle_count</span></span></code></pre></div><h3 id="清洗裸经验数据" tabindex="-1">清洗裸经验数据 <a class="header-anchor" href="#清洗裸经验数据" aria-label="Permalink to &quot;清洗裸经验数据&quot;">​</a></h3><p>裸经验实际上就是 wg 对于用户的评分算法，但是这个数据非常复杂，涉及到较多的历史遗留问题，这个数据并不能直接使用</p><p>首先，胜率对裸经验的数据的影响非常的大，但是在上述的评分中原始 pr 已经包括有胜率相关的评分，所有首先需要将数据中胜率对原始裸经验数据的影响清洗掉，例如直接除去胜率系数</p><p>其次，因为算法中主要还是原始评分占比较大，所以需要乘以一个系数，或者计算服务器平均裸经验数据计算差值，再将数据相加</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cExp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index X (exp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cWins)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cExp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cWins </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expectedExp</span></span></code></pre></div><h2 id="服务器修正" tabindex="-1">服务器修正 <a class="header-anchor" href="#服务器修正" aria-label="Permalink to &quot;服务器修正&quot;">​</a></h2><p>基于服务器总数据和用户所在服务器的差值，计算原始评分的差值</p><p>也可以简单理解成，先计算总服务器平均数据的原始评分在计算所在服务器平均数据的原始评分，再计算差值</p><h2 id="组队修正" tabindex="-1">组队修正 <a class="header-anchor" href="#组队修正" aria-label="Permalink to &quot;组队修正&quot;">​</a></h2><p>是否组队对评分确实有很大的影响，但是需要考虑到的是，组队的影响不是一直都是好的。对于技术比较好的用户来说，收益就是正向收益。如果是萌新组队的话，收益就是反向的。</p><p>所有对于计算组队修正的思路，就是通过计算场次中组队的占比，如果胜率越高则修正越多</p><p>具体的修正值还需要大量数据拟合后才清楚</p>`,35)]))}const y=i(t,[["render",p]]);export{g as __pageData,y as default};
